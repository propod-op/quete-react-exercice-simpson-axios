{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\olivi\\\\Desktop\\\\React Interm\\xE9diaire 02 - Fetcher des donn\\xE9es\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [datas, setDatas] = useState({});\n\n  const getQuote = () => {\n    // Send the request\n    axios.get('https://simpsons-quotes-api.herokuapp.com/quotes') // Extract the DATA from the received response\n    .then(response => response.data) // Use this data to update the state\n    .then(data => {\n      console.log('Ready to quote !');\n      setDatas(data[0]);\n    });\n  };\n\n  useEffect(() => {\n    getQuote();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: datas.character\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"picture\",\n      src: datas.image,\n      alt: datas.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getQuote,\n      children: \"Get a new Quote !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: datas.quote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"k7OJFhPohQCU03nQYBqW7uHHR/c=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/olivi/Desktop/React Intermédiaire 02 - Fetcher des données/src/App.js"],"names":["React","axios","useState","useEffect","App","datas","setDatas","getQuote","get","then","response","data","console","log","character","image","name","quote"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,aAAP;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMK,QAAQ,GAAG,MAAM;AACrB;AACAN,IAAAA,KAAK,CACFO,GADH,CACO,kDADP,EAEE;AAFF,KAGGC,IAHH,CAGSC,QAAD,IAAcA,QAAQ,CAACC,IAH/B,EAIE;AAJF,KAKGF,IALH,CAKSE,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAP,MAAAA,QAAQ,CAACK,IAAI,CAAC,CAAD,CAAL,CAAR;AACD,KARH;AASD,GAXD;;AAaAR,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAA,gBAAKF,KAAK,CAACS;AAAX;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,GAAG,EAAET,KAAK,CAACU,KAApC;AAA2C,MAAA,GAAG,EAAEV,KAAK,CAACW;AAAtD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAET,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,gBAAIF,KAAK,CAACY;AAAV;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GA3BuBb,G;;KAAAA,G","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport './style.css';\n\nexport default function App() {\n  const [datas, setDatas] = useState({});\n  const getQuote = () => {\n    // Send the request\n    axios\n      .get('https://simpsons-quotes-api.herokuapp.com/quotes')\n      // Extract the DATA from the received response\n      .then((response) => response.data)\n      // Use this data to update the state\n      .then((data) => {\n        console.log('Ready to quote !');\n        setDatas(data[0]);\n      });\n  };\n\n  useEffect(() => {\n    getQuote();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1>{datas.character}</h1>\n      <img className=\"picture\" src={datas.image} alt={datas.name} />\n      <button onClick={getQuote}>Get a new Quote !</button>\n      <p>{datas.quote}</p>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}